module curry

export foo/1

let (|>) x f = f x

let non_curry x =
  x + x

-- add : int -> int -> int
let add x y = 
  x + y

-- foo : () -> (int, int)
let foo () =
  let adder = add 6 in
  (6 |> add 5 |> add 5, adder 20)

